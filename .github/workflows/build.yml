name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          git \
          python3-pip \
          openjdk-17-jdk \
          unzip \
          wget \
          cython3 \
          libffi-dev \
          libssl-dev \
          build-essential \
          autoconf \
          libtool \
          pkg-config \
          zlib1g-dev \
          libbz2-dev \
          liblzma-dev \
          libsqlite3-dev \
          libreadline-dev \
          libncurses5-dev \
          libncursesw5-dev \
          xz-utils \
          tk-dev \
          libgdbm-dev \
          libc6-dev \
          libffi-dev \
          curl \
          libsdl2-dev \
          libsdl2-image-dev \
          libsdl2-mixer-dev \
          libsdl2-ttf-dev \
          libportmidi-dev \
          libswscale-dev \
          libavformat-dev \
          libavcodec-dev \
          libjpeg-dev \
          libtiff5-dev \
          libx11-dev \
          libgtk-3-dev \
          libgstreamer1.0-dev \
          libgstreamer-plugins-base1.0-dev

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install buildozer kivy==2.3.1

    - name: Install project dependencies
      run: |
        pip install matplotlib numpy pandas openpyxl weasyprint plyer

    - name: Configure Git (required for buildozer)
      run: |
        git config --global user.email "action@github.com"
        git config --global user.name "GitHub Action"

    - name: Build Android APK
      run: |
        # Set environment variables for better compatibility
        export ANDROID_SDK_ROOT=$HOME/android-sdk
        export ANDROID_NDK_ROOT=$HOME/android-ndk
        export PATH=$PATH:$ANDROID_SDK_ROOT/tools:$ANDROID_SDK_ROOT/platform-tools

        # First, ensure we have the latest buildozer and python-for-android
        pip install --upgrade buildozer kivy

        # Check buildozer version and available targets
        buildozer --version
        buildozer --help | head -20

        # Build debug APK (this will download Android SDK/NDK automatically)
        # Skip clean for first build to avoid python-for-android issues
        buildozer android debug
      continue-on-error: false
      timeout-minutes: 60

    - name: List generated files
      run: |
        echo "=== Build Directory ==="
        ls -la .buildozer/
        echo "=== Bin Directory ==="
        ls -la bin/ || echo "Bin directory not found"

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: |
          bin/*.apk
          bin/*.aab
        retention-days: 30
        if-no-files-found: error

    - name: Upload build logs
      uses: actions/upload-artifact@v4
      with:
        name: build-logs
        path: |
          .buildozer/android/platform/python-for-android/dist/*/build/**/*.log
          .buildozer/android/platform/build/**/*.log
        if-no-files-found: warn

    - name: Notify on success
      if: success()
      run: |
        echo "âœ… APK build completed successfully!"
        echo "ðŸ“± Download your APK from the 'android-apk' artifact above"